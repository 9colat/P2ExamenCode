  thread myThread():
    while True:
      textmsg(get_actual_joint_positions())
      sleep(0.100)
    end
  end
  def onPathStart():
    set_digital_out(2,True)
    global thrd = run myThread()
  end
  
  # Subprogram onPathFinish
  def onPathFinish():
    set_digital_out(2,False)
    kill thrd
  end
def hub():
  # Global parameters:
  global speed_ms    = 0.300
  global speed_rads  = 0.750
  global accel_mss   = 3.000
  global accel_radss = 1.200
  global blend_radius_m = 0.001
  
  #--------------------------
  # Main program:
  # Program generated by RoboDK 3.4.0 for UR5 on 27/05/2018 19:14:01
  # Using nominal kinematics.
  blend_radius_m = 0.001
  # set_reference(p[-0.100000, -0.500000, 0.025110, 0.000000, 2.221441, -2.221441])
  set_tcp(p[-0.002500, -0.001000, 0.100000, 0.000000, 0.000000, 0.000000])
  # Show end_efectorV2
  speed_ms    = 1.000
  movej([-1.339285, -1.865469, -2.096623, -0.843838, 1.054854, 4.900303],accel_radss,speed_rads,0,0)
  movel([-1.339285, -1.865469, -2.096623, -0.843838, 1.054854, 4.900303],accel_mss,speed_ms,0,0)
  movel([-1.339285, -1.885676, -2.104587, -0.815667, 1.054854, 4.900303],accel_mss,speed_ms,0,blend_radius_m)
  onPathStart()
  movel([-1.339285, -1.885676, -2.104587, -0.815667, 1.054854, 4.900303],accel_mss,speed_ms,0,0.000)
  speed_ms    = 0.167
  movel([-1.335375, -1.873635, -2.150648, -0.705730, 1.047467, 4.747643],accel_mss,speed_ms,0,0.001)
  movel([-1.335510, -1.864981, -2.193955, -0.592336, 1.050447, 4.589923],accel_mss,speed_ms,0,0.001)
  movel([-1.340077, -1.859826, -2.233493, -0.478645, 1.064682, 4.428670],accel_mss,speed_ms,0,0.001)
  movel([-1.349400, -1.857946, -2.268422, -0.368286, 1.090737, 4.265637],accel_mss,speed_ms,0,0.001)
  movel([-1.363691, -1.858828, -2.298114, -0.265012, 1.128755, 4.102547],accel_mss,speed_ms,0,0.001)
  movel([-1.382996, -1.861803, -2.322159, -0.172327, 1.178396, 3.940843],accel_mss,speed_ms,0,0.001)
  movel([-1.407137, -1.866186, -2.340319, -0.093195, 1.238806, 3.781505],accel_mss,speed_ms,0,0.001)
  movel([-1.435670, -1.871383, -2.352492, -0.029888, 1.308638, 3.624966],accel_mss,speed_ms,0,0.001)
  movel([-1.467857, -1.876944, -2.358675, 0.016031, 1.386090, 3.471135],accel_mss,speed_ms,0,0.001)
  movel([-1.502694, -1.882556, -2.358958, 0.043637, 1.468987, 3.319480],accel_mss,speed_ms,0,0.001)
  movel([-1.538973, -1.888013, -2.353522, 0.052525, 1.554887, 3.169155],accel_mss,speed_ms,0,0.001)
  movel([-1.575383, -1.893182, -2.342636, 0.042709, 1.641209, 3.019127],accel_mss,speed_ms,0,0.001)
  movel([-1.610634, -1.897979, -2.326641, 0.014533, 1.725378, 2.868307],accel_mss,speed_ms,0,0.001)
  movel([-1.643567, -1.902375, -2.305915, -0.031352, 1.804947, 2.715694],accel_mss,speed_ms,0,0.001)
  movel([-1.673238, -1.906416, -2.280827, -0.093977, 1.877710, 2.560503],accel_mss,speed_ms,0,0.001)
  movel([-1.698957, -1.910267, -2.251707, -0.171966, 1.941775, 2.402321],accel_mss,speed_ms,0,0.001)
  movel([-1.720290, -1.914232, -2.218832, -0.263436, 1.995632, 2.241226],accel_mss,speed_ms,0,0.001)
  movel([-1.737034, -1.918761, -2.182462, -0.365898, 2.038196, 2.077881],accel_mss,speed_ms,0,0.001)
  movel([-1.749176, -1.924386, -2.142901, -0.476278, 2.068847, 1.913514],accel_mss,speed_ms,0,0.001)
  movel([-1.756843, -1.931609, -2.100585, -0.591055, 2.087449, 1.749795],accel_mss,speed_ms,0,0.001)
  movel([-1.760264, -1.940775, -2.056141, -0.706571, 2.094326, 1.588601],accel_mss,speed_ms,0,0.001)
  movel([-1.759728, -1.951965, -2.010399, -0.819394, 2.090204, 1.431722],accel_mss,speed_ms,0,0.001)
  movel([-1.755562, -1.964969, -1.964347, -0.926630, 2.076102, 1.280614],accel_mss,speed_ms,0,0.001)
  movel([-1.748106, -1.979324, -1.919044, -1.026110, 2.053216, 1.136242],accel_mss,speed_ms,0,0.001)
  movel([-1.737701, -1.994409, -1.875546, -1.116401, 2.022798, 0.999046],accel_mss,speed_ms,0,0.001)
  movel([-1.724680, -2.009533, -1.834832, -1.196706, 1.986067, 0.868999],accel_mss,speed_ms,0,0.001)
  movel([-1.709363, -2.024017, -1.797776, -1.266703, 1.944153, 0.745714],accel_mss,speed_ms,0,0.001)
  movel([-1.692056, -2.037238, -1.765133, -1.326382, 1.898060, 0.628559],accel_mss,speed_ms,0,0.001)
  movel([-1.673048, -2.048662, -1.737533, -1.375914, 1.848664, 0.516756],accel_mss,speed_ms,0,0.001)
  movel([-1.652615, -2.057845, -1.715487, -1.415553, 1.796722, 0.409456],accel_mss,speed_ms,0,0.001)
  movel([-1.631018, -2.064443, -1.699389, -1.445575, 1.742882, 0.305782],accel_mss,speed_ms,0,0.001)
  movel([-1.608510, -2.068204, -1.689516, -1.466236, 1.687712, 0.204861],accel_mss,speed_ms,0,0.001)
  movel([-1.585334, -2.068970, -1.686028, -1.477762, 1.631709, 0.105832],accel_mss,speed_ms,0,0.001)
  movel([-1.561729, -2.066669, -1.688971, -1.480330, 1.575330, 0.007852],accel_mss,speed_ms,0,0.001)
  movel([-1.537933, -2.061313, -1.698277, -1.474067, 1.519002, -0.089911],accel_mss,speed_ms,0,0.001)
  movel([-1.514183, -2.052999, -1.713769, -1.459046, 1.463149, -0.188286],accel_mss,speed_ms,0,0.001)
  movel([-1.490723, -2.041902, -1.735169, -1.435281, 1.408202, -0.288100],accel_mss,speed_ms,0,0.001)
  movel([-1.467803, -2.028276, -1.762105, -1.402728, 1.354623, -0.390193],accel_mss,speed_ms,0,0.001)
  movel([-1.445686, -2.012454, -1.794120, -1.361288, 1.302925, -0.495410],accel_mss,speed_ms,0,0.001)
  movel([-1.424649, -1.994852, -1.830676, -1.310811, 1.253685, -0.604604],accel_mss,speed_ms,0,0.001)
  movel([-1.404989, -1.975970, -1.871153, -1.251131, 1.207569, -0.718608],accel_mss,speed_ms,0,0.001)
  movel([-1.387022, -1.956399, -1.914853, -1.182102, 1.165348, -0.838211],accel_mss,speed_ms,0,0.001)
  movel([-1.371089, -1.936818, -1.960983, -1.103679, 1.127909, -0.964094],accel_mss,speed_ms,0,0.001)
  movel([-1.357558, -1.917979, -2.008655, -1.016028, 1.096260, -1.096753],accel_mss,speed_ms,0,0.001)
  movel([-1.346820, -1.900675, -2.056882, -0.919675, 1.071514, -1.236407],accel_mss,speed_ms,0,0.001)
  movel([-1.345639, -1.896785, -2.062534, -0.918546, 1.071708, -1.235080],accel_mss,speed_ms,0,0.001)
  speed_ms    = 1.000
  onPathFinish()
  movel([-1.345639, -1.896785, -2.062534, -0.918546, 1.071708, -1.235080],accel_mss,speed_ms,0,0.000)
  movel([-1.345639, -1.877605, -2.054301, -0.945960, 1.071708, -1.235080],accel_mss,speed_ms,0,blend_radius_m)
  # End of main program
end

hub()
